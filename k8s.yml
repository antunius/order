apiVersion: v1
kind: Namespace
metadata:
  name: order
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  namespace: order
  labels:
    app: order
    color: blue
    version: blue
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      name: order
      labels:
        app: order
        color: blue
        version: blue
    spec:
      containers:
        - name: order
          image: marcusantunius/order:v1
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: order-blue

      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-alb
  namespace: order
  labels:
    app: order
    color: green
    version: green
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      name: order
      labels:
        app: order
        color: green
        version: green
    spec:
      containers:
        - name: order
          image: marcusantunius/order:v1
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: order-green

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: order
  namespace: order
spec:
  selector:
    app: order
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
    - protocol: TCP
      port: 443
      targetPort: 443
      name: https
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: order
  name: order-blue
data:
  restaurantv2: "http://restaurant.restaurant"
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: order
  name: order-green
data:
  restaurantv2: "http://k8s-restaura-restaura-13c720b2f0-264929128.us-east-1.elb.amazonaws.com"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: order
  namespace: order
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
  labels:
    app: order
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: order
                port:
                  number: 80
